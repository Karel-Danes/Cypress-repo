name: ðŸ§ª E2E product sync build->   
on:
  workflow_dispatch:
    inputs:

      test_feature_db_name:
        description: "Particular merge request db name."
        required: false
        #default: "test-alza-service"
        type: string

      randomizer_active:
        description: "Products variants randomizer engaging"
        required: false
        type: boolean

      products_amount:
        description: "number of simulated product variants"
        required: false
        type: string   
         
      test_case:
        description: "test cases"
        required: false
        type: choice
        #default: "alza"
        options:
          - alza
          - kaufland

  push:

jobs:
  cypress-run:
    runs-on: ubuntu-latest
    steps:
      - name: Dump GitHub context
        id: github_context_step
        run: echo '${{ toJSON(github) }}'
      - name: Dump job context
        run: echo '${{ toJSON(job) }}'
      - name: Dump steps context
        run: echo '${{ toJSON(steps) }}'
      - name: Dump runner context
        run: echo '${{ toJSON(runner) }}'
      - name: Dump strategy context
        run: echo '${{ toJSON(strategy) }}'
      - name: Dump matrix context
        run: echo '${{ toJSON(matrix) }}'
      - name: github env
        run: echo $GITHUB_ENV
      - name: github env
        run: echo "${{github.env}}"
 
      - name: Creating env file 
        run: | 
          touch .env
          echo EXPERIMENT=${{github.event.inputs.test_case}} >> .env
          echo MOTO=${{secrets.MOTO}} >> .env
          cat .env

      - name: Status check and cache update
        if: ${{ github.event.inputs.test_case == 'alza' }}
        run: |
          echo "inputs ${{ toJSON(inputs) }}"
          echo "event name: ${{github.event_name}}"
          echo "CYPRESS_TEST_FEATURE_DB_NAME=${{ toJSON(github.event.inputs.test_feature_db_name )}}" >> $GITHUB_ENV
          echo "CYPRESS_RANDOMIZER_ACTIVE=${{ toJSON(github.event.inputs.randomizer_active) }}" >> $GITHUB_ENV
          echo "CYPRESS_PRODUCTS_AMOUNT=${{ toJSON(github.event.inputs.products_amount)}}" >> $GITHUB_ENV
          
      - name: Setting environment to ALZA
        if: ${{ github.event.inputs.test_case == 'alza' }}
        run: |
          echo "CYPRESS_TEST_CASE=alza" >> $GITHUB_ENV

      - name: Setting environment to KAUFLAND
        if: ${{ github.event.inputs.test_case == 'kaufland' }}
        run: |
          echo "CYPRESS_TEST_CASE=kaufland" >> $GITHUB_ENV

      - name: Checkout
        uses: actions/checkout@v3

      - name: Caches
        uses: actions/cache@v2
        with:
          path: |
            ~/.cache/Cypress
            build
            node_modules
          key: ${{ runner.os }}-node_modules-build-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node_modules-build-

      - name: Set environment variables
        run: |
          echo "PACKAGE_VERSION=$(node -p "require('./package.json').version")" >> $GITHUB_ENV

      - name: Install root dependencies
        uses: bahmutov/npm-install@v1

      - name: Cypress run alza (manual trigger)
        if: ${{ (github.event.inputs.test_case == '') || (github.event_name == 'push') }}
        uses: cypress-io/github-action@v4
        id: cypress-alza-manual
        with:
          env: true
          install: false
          browser: electron
          headed: false
          spec: cypress/e2e/api-call-round-alza.cy.js
       # env:  
         # CYPRESS_TEST_CASE: ${{env.CYPRESS_TEST_CASE}}
         # CYPRESS_TEST_FEATURE_DB_NAME: ${{env.CYPRESS_TEST_FEATURE_DB_NAME}}

      - name: Cypress run alza (dispatch trigger)
        if: ${{ github.event.inputs.test_case == 'alza' }}
        uses: cypress-io/github-action@v4
        id: cypress-alza
        with:
          install: false
          #config: video=false, screenshotOnRunFailure=false
          browser: electron
          headed: false
          spec: cypress/e2e/api-call-round-alza.cy.js
        env: 
          CYPRESS_TEST_CASE: ${{env.CYPRESS_TEST_CASE}}
          CYPRESS_TEST_FEATURE_DB_NAME: ${{env.CYPRESS_TEST_FEATURE_DB_NAME}}

      - name: Cypress run kauflalnd (dispatch trigger)
        if: ${{ github.event.inputs.test_case == 'kaufland' }}
        uses: cypress-io/github-action@v4
        id: cypress-kaufland
        with:
          install: false
          # config: video=false,screenshotOnRunFailure=false
          browser: electron
          headed: false
          spec: cypress/e2e/api-call-round-kaufland.cy.js
       # env: 
         # CYPRESS_TEST_CASE: ${{env.CYPRESS_TEST_CASE}}
         # CYPRESS_TEST_FEATURE_DB_NAME: ${{env.CYPRESS_TEST_FEATURE_DB_NAME}}
  
